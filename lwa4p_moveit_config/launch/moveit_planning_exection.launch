<launch>
  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />
 
  <include file="$(find lwa4p_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <group if="$(arg sim)">
    <include file="$(find schunk_lwa4p)/launch/sim.launch" />
  </group>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  
  <node name="listener" pkg= "move_group_interface" type="listener" output="screen"/> 
  <!-- <node name="lister" pkg="rospy_tutorials" type="listener.py" output="screen"/> -->

  <include file="$(find lwa4p_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find lwa4p_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>
  
  <include file="$(find move_group_interface)/launch/move_group_interface_demo2.launch">
  </include>
  
<!--<node name="link_states" pkg= "rostopic" type="rostopic" output="screen"/> -->

<!-- <node pkg="rostopic" type="rostopic" name="link_states" args="pub /pkg_topic pkg_executable_file/message" output="screen"/> -->
</launch>
